/* Create a table of movies */
CREATE TABLE movies (id INTEGER PRIMARY KEY AUTOINCREMENT, title TEXT, release_year INTEGER);

INSERT INTO movies (title, release_year) VALUES ("The Matrix", 1999);
INSERT INTO movies (title, release_year) VALUES ("Out of Sight", 1998);
INSERT INTO movies (title, release_year) VALUES ("Kill Bill", 2003);

/* Create a table of celebrities with a movie_id for films they have been in */
CREATE TABLE celeb_profiles (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, age INTEGER, gender TEXT, state TEXT, movie_id INTEGER);

INSERT INTO celeb_profiles (name, age, gender, movie_id) VALUES ("Keanu Reeves", 58, "M", (SELECT id FROM movies WHERE title = "The Matrix"));
INSERT INTO celeb_profiles (name, age, gender, state, movie_id) VALUES ("George Clooney", 61, "M", "CA", (SELECT id FROM movies WHERE title = "Out of Sight"));
INSERT INTO celeb_profiles (name, age, gender, state, movie_id) VALUES ("Uma Thurman", 52, "F", "CA", (SELECT id FROM movies WHERE title = "Kill Bill"));

/* Create a table of directors, including the id of the films they've created */
CREATE TABLE directors (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, age INTEGER, most_famous_movie_id INTEGER);

INSERT INTO directors (name, age, most_famous_movie_id) VALUES ("Wachowski", 57,
(SELECT id FROM movies WHERE title = "The Matrix"));
INSERT INTO directors (name, age, most_famous_movie_id) VALUES ("Soderbergh", 60, (SELECT id FROM movies WHERE title = "Out of Sight"));
INSERT INTO directors (name, age, most_famous_movie_id) VALUES ("Tarantino", 60, (SELECT id FROM movies WHERE title = "Kill Bill")); 

/* Create a table that records the film, actor, and director attached to eachother */
CREATE TABLE worked_with_eachother (id INTEGER PRIMARY KEY AUTOINCREMENT, movie_id INTEGER, actor_id INTEGER, director_id INTEGER);

INSERT INTO worked_with_eachother (movie_id, actor_id, director_id) VALUES (1, 1, 1);
INSERT INTO worked_with_eachother (movie_id, actor_id, director_id) VALUES (2, 2, 2);
INSERT INTO worked_with_eachother (movie_id, actor_id, director_id) VALUES (3, 3, 3);


/* Pull Actors and Directors Who've Worked Together */

SELECT celeb_profiles.name AS ACTOR, directors.name AS DIRECTOR FROM celeb_profiles
INNER JOIN directors
ON celeb_profiles.id = directors.most_famous_movie_id;

/* Use the worked_with_eachother table to pull the actors, directors, and movies together */
SELECT celeb_profiles.name AS Actor, directors.name AS Director, movies.title AS Movie
FROM worked_with_eachother
INNER JOIN celeb_profiles ON celeb_profiles.id = worked_with_eachother.actor_id
INNER JOIN directors ON directors.id = worked_with_eachother.director_id
INNER JOIN movies ON movies.id = worked_with_eachother.movie_id;
